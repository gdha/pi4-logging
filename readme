 curl -SLsf https://dl.get-arkade.dev/ | sudo sh
aarch64
Downloading package https://github.com/alexellis/arkade/releases/download/0.8.62/arkade-arm64 as /tmp/arkade-arm64
Download complete.

Running with sufficient permissions to attempt to move arkade to /usr/local/bin
New version of arkade installed to /usr/local/bin
Creating alias 'ark' for 'arkade'.
            _             _      
  __ _ _ __| | ____ _  __| | ___ 
 / _` | '__| |/ / _` |/ _` |/ _ \
| (_| | |  |   < (_| | (_| |  __/
 \__,_|_|  |_|\_\__,_|\__,_|\___|

Open Source Marketplace For Developer Tools

Version: 0.8.62
Git Commit: 003e8716bbc987c412643af3a90cf87ef778bd2e

 🐳 arkade needs your support: https://github.com/sponsors/alexellis
gdha@n1:~/projects/pi4-logging$ ls /usr/local/bin
ark  arkade  crictl  golangci-lint  helm  k3s  k3s-killall.sh  k3s-uninstall.sh  kubectl  kube-linter
gdha@n1:~/projects/pi4-logging$ kubectl apply -f logging-namespace.yaml 
namespace/logging created
gdha@n1:~/projects/pi4-logging$ arkade install loki -n logging  --persistence
2023/02/03 15:24:10 
Using Kubeconfig: /home/gdha/.kube/config
[Warning] unable to create namespace logging, may already exist: Error from server (AlreadyExists): namespaces "logging" already exists
Client: aarch64, Linux
2023/02/03 15:24:10 User dir established as: /home/gdha/.arkade/
2023/02/03 15:24:10 Looking up version for helm
2023/02/03 15:24:10 Found: v3.11.0
Downloading: https://get.helm.sh/helm-v3.11.0-linux-arm64.tar.gz
/tmp/helm-v3.11.0-linux-arm64.tar.gz written.
2023/02/03 15:24:14 Looking up version for helm
2023/02/03 15:24:14 Found: v3.11.0
2023/02/03 15:24:15 Extracted: /tmp/helm
2023/02/03 15:24:15 Copying /tmp/helm to /home/gdha/.arkade/bin/helm
Downloaded to:  /home/gdha/.arkade/bin/helm helm
"grafana" has been added to your repositories

Hang tight while we grab the latest from your chart repositories...
...Successfully got an update from the "metallb" chart repository
...Successfully got an update from the "longhorn" chart repository
...Successfully got an update from the "traefik" chart repository
...Successfully got an update from the "kiwigrid" chart repository
...Successfully got an update from the "grafana" chart repository
Update Complete. ⎈Happy Helming!⎈

VALUES values.yaml
Command: /home/gdha/.arkade/bin/helm [upgrade --install loki-stack grafana/loki-stack --namespace logging --values /tmp/charts/loki-stack/values.yaml --set loki.persistence.enabled=true]
Release "loki-stack" does not exist. Installing it now.
NAME: loki-stack
LAST DEPLOYED: Fri Feb  3 15:24:22 2023
NAMESPACE: logging
STATUS: deployed
REVISION: 1
NOTES:
The Loki stack has been deployed to your cluster. Loki can now be added as a datasource in Grafana.

See http://docs.grafana.org/features/datasources/loki/ for more detail.
=======================================================================
= loki has been installed.                                   =
=======================================================================

# Get started with loki here:
# https://grafana.com/docs/loki/latest

# See how to integrate loki with Grafana here
# https://grafana.com/docs/loki/latest/getting-started/grafana

# Check loki's logs with:

kubectl logs svc/loki-stack

kubectl logs svc/loki-stack-headless


# If you installed with Grafana you can access the dashboard with the username "admin" and password shown below
 # To get password
 kubectl get secret loki-stack-grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo

 # Forward traffic to your localhost
 kubectl port-forward service/loki-stack-grafana 3000:80



🐳 arkade needs your support: https://github.com/sponsors/alexellis

gdha@n1:~/projects/pi4-logging$ kubectl get pods -n logging
NAME                        READY   STATUS    RESTARTS   AGE
loki-stack-0                0/1     Running   0          114s
loki-stack-promtail-d45tz   1/1     Running   0          114s
loki-stack-promtail-qv75h   1/1     Running   0          114s
loki-stack-promtail-rhcr9   1/1     Running   0          114s
loki-stack-promtail-dwz7s   1/1     Running   0          114s
loki-stack-promtail-4qwlg   1/1     Running   0          114s

gdha@n1:~/projects/pi4-logging$ kubectl get daemonsets loki-stack-promtail -n logging -o json
{
    "apiVersion": "apps/v1",
    "kind": "DaemonSet",
    "metadata": {
        "annotations": {
            "deprecated.daemonset.template.generation": "1",
            "meta.helm.sh/release-name": "loki-stack",
            "meta.helm.sh/release-namespace": "logging"
        },
        "creationTimestamp": "2023-02-03T14:24:27Z",
        "generation": 1,
        "labels": {
            "app.kubernetes.io/instance": "loki-stack",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "promtail",
            "app.kubernetes.io/version": "2.7.0",
            "helm.sh/chart": "promtail-6.7.4"
        },
        "name": "loki-stack-promtail",
        "namespace": "logging",
        "resourceVersion": "255851",
        "uid": "0f45594b-86b1-47ab-9033-126227e877ff"
    },
    "spec": {
        "revisionHistoryLimit": 10,
        "selector": {
            "matchLabels": {
                "app.kubernetes.io/instance": "loki-stack",
                "app.kubernetes.io/name": "promtail"
            }
        },
        "template": {
            "metadata": {
                "annotations": {
                    "checksum/config": "71c0bf59ea450af02bace0a6bc70c0c39c60caf9aa8c521757a4215c5d0635e2"
                },
                "creationTimestamp": null,
                "labels": {
                    "app.kubernetes.io/instance": "loki-stack",
                    "app.kubernetes.io/name": "promtail"
                }
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "-config.file=/etc/promtail/promtail.yaml"
                        ],
                        "env": [
                            {
                                "name": "HOSTNAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "image": "docker.io/grafana/promtail:2.7.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "promtail",
                        "ports": [
                            {
                                "containerPort": 3101,
                                "name": "http-metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/ready",
                                "port": "http-metrics",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/promtail",
                                "name": "config"
                            },
                            {
                                "mountPath": "/run/promtail",
                                "name": "run"
                            },
                            {
                                "mountPath": "/var/lib/docker/containers",
                                "name": "containers",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/log/pods",
                                "name": "pods",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsGroup": 0,
                    "runAsUser": 0
                },
                "serviceAccount": "loki-stack-promtail",
                "serviceAccountName": "loki-stack-promtail",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/control-plane",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "config",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "loki-stack-promtail"
                        }
                    },
                    {
                        "hostPath": {
                            "path": "/run/promtail",
                            "type": ""
                        },
                        "name": "run"
                    },
                    {
                        "hostPath": {
                            "path": "/var/lib/docker/containers",
                            "type": ""
                        },
                        "name": "containers"
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/pods",
                            "type": ""
                        },
                        "name": "pods"
                    }
                ]
            }
        },
        "updateStrategy": {
            "rollingUpdate": {
                "maxSurge": 0,
                "maxUnavailable": 1
            },
            "type": "RollingUpdate"
        }
    },
    "status": {
        "currentNumberScheduled": 5,
        "desiredNumberScheduled": 5,
        "numberAvailable": 5,
        "numberMisscheduled": 0,
        "numberReady": 5,
        "observedGeneration": 1,
        "updatedNumberScheduled": 5
    }
}
gdha@n1:~/projects/pi4-logging$ 

gdha@n1:~/projects/pi4-logging$ cat patch.yaml 
spec:
  template:
    spec:
      tolerations:
        - operator: Exists

gdha@n1:~/projects/pi4-logging$ kubectl patch daemonset loki-stack-promtail -n logging --patch "$(cat patch.yaml)"
daemonset.apps/loki-stack-promtail patched

gdha@n1:~/projects/pi4-logging$ kubectl get svc -n logging
NAME                    TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)    AGE
loki-stack-headless     ClusterIP   None           <none>        3100/TCP   6m39s
loki-stack-memberlist   ClusterIP   None           <none>        7946/TCP   6m39s
loki-stack              ClusterIP   10.43.220.29   <none>        3100/TCP   6m39s

